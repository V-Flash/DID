<!DOCTYPE html>
<html>
<head>
    <title>Excel Data Display</title>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/buttons/2.1.1/css/buttons.dataTables.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/1.3.3/css/select.dataTables.min.css">
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        .container {
            margin-top: 50px;
        }
    </style>
</head>
<body>
<div class="container">
    <table id="example" class="table table-striped table-bordered">
    </table>
</div>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/buttons/2.1.1/js/dataTables.buttons.min.js"></script>
<script src="https://cdn.datatables.net/select/1.3.3/js/dataTables.select.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.9/xlsx.full.min.js"></script>
<script>
    window.addEventListener('DOMContentLoaded', (event) => {
        var reader = new FileReader();

        reader.onload = function(event) {
            var data = new Uint8Array(event.target.result);
            var work_book = XLSX.read(data, { type: 'array' });
            var sheet_name = work_book.SheetNames;
            var sheet_data = XLSX.utils.sheet_to_json(work_book.Sheets[sheet_name[0]], { header: 1 });

            if (sheet_data.length > 0) {
                var table_output = '';
                for (var row = 0; row < sheet_data.length; row++) {
                    table_output += '<tr>';
                    for (var cell = 0; cell < sheet_data[row].length; cell++) {
                        if (row === 0) {
                            table_output += '<th>' + sheet_data[row][cell] + '</th>';
                        } else {
                            // Check if the value is a time (you may need to adjust this condition)
                            if (typeof sheet_data[row][cell] === 'number' && sheet_data[row][cell] % 1 !== 0) {
                                var timeValue = new Date(sheet_data[row][cell] * 24 * 60 * 60 * 1000);
                                var formattedTime = timeValue.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', hour12: false });
                                table_output += '<td>' + formattedTime + '</td>';
                            } else {
                                table_output += '<td>' + sheet_data[row][cell] + '</td>';
                            }
                        }
                    }
                    table_output += '</tr>';
                }
                document.getElementById('example').innerHTML = table_output;
                
                // Initialize DataTables
                $(document).ready(function() {
                    $('#example').DataTable({
                        // DataTables options here
                    });
                });
            }
        };

        // Load your Excel file here
        var fileInput = 'ok.xlsx'; // Replace with the actual path to your file
        fetch(fileInput)
            .then(response => response.blob())
            .then(blob => reader.readAsArrayBuffer(blob));
    });
</script>
</body>
</html>
