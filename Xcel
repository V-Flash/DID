<!DOCTYPE HTML>
<html>
<head>
  <meta charset="utf-8" />
  <title>Convert Excel to HTML Table using DataTables</title>
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="stylesheet" href="https://cdn.datatables.net/1.10.25/css/jquery.dataTables.min.css">
  <link rel="stylesheet" href="https://cdn.datatables.net/responsive/2.2.9/css/responsive.dataTables.min.css">
  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <script src="https://cdn.datatables.net/1.10.25/js/jquery.dataTables.min.js"></script>
  <script src="https://cdn.datatables.net/responsive/2.2.9/js/dataTables.responsive.min.js"></script>
  <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.15.1/xlsx.full.min.js"></script>
</head>
<body>
    <div class="container">
      <h2 class="text-center mt-4 mb-4">Convert Excel to HTML Table using DataTables</h2>
      <div class="card">
        <div class="card-header"><b>Excel Data</b></div>
        <div class="card-body">
            <div class="table-responsive">
                <table id="excel_table" class="table table-striped table-bordered"></table>
            </div>
        </div>
      </div>
    </div>
</body>
</html>

<script>
window.addEventListener('DOMContentLoaded', (event) => {
    var reader = new FileReader();

    reader.onload = function(event) {
        var data = new Uint8Array(event.target.result);
        var work_book = XLSX.read(data, { type: 'array' });
        var sheet_name = work_book.SheetNames;
        var sheet_data = XLSX.utils.sheet_to_json(work_book.Sheets[sheet_name[0]], { header: 1 });

        if (sheet_data.length > 0) {
            var table = $('#excel_table').DataTable({
                data: sheet_data,
                responsive: true,
                columns: sheet_data[0].map(function(col, index) {
                    return { title: col };
                })
            });
        }
    };

    // Load your Excel file here
    var fileInput = 'yog-class.xlsx'; // Replace with the actual path to your file
    fetch(fileInput)
      .then(response => response.blob())
      .then(blob => reader.readAsArrayBuffer(blob));
});
</script>
